name: Release

on:
  push:
    tags:
    - 'v*'

jobs:

  build:
    name: Release
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Get tag
      id: get_version
      run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Build
      env:
        CGO_ENABLED: 0
      run: go build -ldflags="-s -w"

    - name: Create build artifact
      run: tar zcvf go-werk_${{ steps.get_version.outputs.SOURCE_TAG }}.tgz go-werk

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.SOURCE_TAG }}
        release_name: ${{ steps.get_version.outputs.SOURCE_TAG }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./go-werk_${{ steps.get_version.outputs.SOURCE_TAG }}.tgz
        asset_name: go-werk_${{ steps.get_version.outputs.SOURCE_TAG }}.tgz
        asset_content_type: application/gzip